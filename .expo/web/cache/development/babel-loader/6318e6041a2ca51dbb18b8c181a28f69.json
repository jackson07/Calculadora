{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { validarResposta, gerarNumero } from \"./funcoes\";\nimport estilo from \"./estilo\";\nimport fundo from \"../../assets/fundo.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TelaInicio = function TelaInicio(props) {\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      primeiroNumero = _useState2[0],\n      setPrimeiroNumero = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      segundoNumero = _useState4[0],\n      setSegundoNumero = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      respostaUsuario = _useState6[0],\n      setRespostaUsuario = _useState6[1];\n\n  var criarQuestao = function criarQuestao() {\n    setPrimeiroNumero(gerarNumero());\n    setSegundoNumero(gerarNumero());\n    setRespostaUsuario(\"\");\n  };\n\n  var responder = function responder() {\n    if (validarResposta(primeiroNumero, segundoNumero, respostaUsuario)) {\n      props.navigation.navigate('RespostaCorreta');\n    } else {\n      props.navigation.navigate('RespostaErrada');\n    }\n\n    criarQuestao();\n  };\n\n  var abrirTelaTabuada = function abrirTelaTabuada() {\n    props.navigation.navigate('Tabuada');\n  };\n\n  return _jsx(ImageBackground, {\n    source: fundo,\n    style: estilo.imagemFundo,\n    children: _jsxs(View, {\n      style: estilo.tela,\n      children: [_jsxs(View, {\n        style: estilo.boxPergunta,\n        children: [_jsx(Text, {\n          style: estilo.titulo,\n          children: \"Duvido voc\\xEA acertar!\"\n        }), _jsxs(View, {\n          style: estilo.boxQuestao,\n          children: [_jsx(Text, {\n            style: estilo.texto,\n            children: primeiroNumero\n          }), _jsx(Text, {\n            style: estilo.texto,\n            children: \"X\"\n          }), _jsx(Text, {\n            style: estilo.texto,\n            children: segundoNumero\n          }), _jsx(Text, {\n            style: estilo.texto,\n            children: \"=\"\n          }), _jsx(TextInput, {\n            textAlign: \"center\",\n            onChangeText: setRespostaUsuario,\n            keyboardType: \"numeric\",\n            value: respostaUsuario.toString(),\n            autoFocus: true,\n            maxLength: 3,\n            style: estilo.input\n          })]\n        }), _jsxs(View, {\n          style: estilo.opcoes,\n          children: [_jsx(View, {\n            style: estilo.boxBotao,\n            children: _jsx(Button, {\n              title: \"Pular\",\n              onPress: criarQuestao,\n              color: \"#e53b62\"\n            })\n          }), _jsx(View, {\n            style: estilo.boxBotao,\n            children: _jsx(Button, {\n              title: \"Responder\",\n              onPress: responder,\n              color: \"#a0df52\"\n            })\n          })]\n        })]\n      }), _jsx(View, {\n        style: estilo.boxBotaoTabuada,\n        children: _jsx(Button, {\n          title: \"Ver tabuada\",\n          onPress: abrirTelaTabuada,\n          color: \"#1f4f66\"\n        })\n      })]\n    })\n  });\n};\n\nexport default TelaInicio;","map":{"version":3,"sources":["D:/React Native/App Calculadora/NewApp/telas/TelaInicio/index.js"],"names":["React","useState","validarResposta","gerarNumero","estilo","fundo","TelaInicio","props","primeiroNumero","setPrimeiroNumero","segundoNumero","setSegundoNumero","respostaUsuario","setRespostaUsuario","criarQuestao","responder","navigation","navigate","abrirTelaTabuada","imagemFundo","tela","boxPergunta","titulo","boxQuestao","texto","toString","input","opcoes","boxBotao","boxBotaoTabuada"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, Button, TextInput, ImageBackground } from \"react-native\";\r\n\r\nimport { validarResposta, gerarNumero } from \"./funcoes\";\r\n\r\nimport estilo from './estilo';\r\nimport fundo from '../../assets/fundo.png';\r\n\r\nconst TelaInicio = (props) => {\r\n  const [ primeiroNumero, setPrimeiroNumero ] = useState(1);\r\n  const [ segundoNumero, setSegundoNumero ] = useState(1);\r\n  const [ respostaUsuario, setRespostaUsuario ] = useState(0);\r\n  \r\n  const criarQuestao = () => {\r\n    setPrimeiroNumero(gerarNumero());\r\n    setSegundoNumero(gerarNumero());\r\n    setRespostaUsuario(\"\");\r\n  }\r\n\r\n  const responder = () => {\r\n    if ( validarResposta(primeiroNumero, segundoNumero, respostaUsuario) ) {\r\n      props.navigation.navigate('RespostaCorreta');\r\n    } else {\r\n      props.navigation.navigate('RespostaErrada');\r\n    }\r\n    \r\n    criarQuestao();\r\n  }\r\n\r\n  const abrirTelaTabuada = () => {\r\n    props.navigation.navigate('Tabuada');\r\n  }\r\n\r\n  return (\r\n    <ImageBackground source={fundo} style={estilo.imagemFundo}>\r\n      <View style={estilo.tela}>\r\n        <View style={estilo.boxPergunta}>\r\n          <Text style={estilo.titulo}>\r\n            Duvido vocÃª acertar!\r\n          </Text>\r\n\r\n          <View style={estilo.boxQuestao}>\r\n            <Text style={estilo.texto}>            \r\n              { primeiroNumero }\r\n            </Text>\r\n\r\n            <Text style={estilo.texto}>\r\n              X\r\n            </Text>\r\n\r\n            <Text style={estilo.texto}>            \r\n              { segundoNumero }\r\n            </Text>\r\n\r\n            <Text style={estilo.texto}>\r\n              =\r\n            </Text>\r\n\r\n            <TextInput \r\n              textAlign=\"center\"\r\n              onChangeText={ setRespostaUsuario } \r\n              keyboardType=\"numeric\" \r\n              value={respostaUsuario.toString()} \r\n              autoFocus={true}\r\n              maxLength={3} \r\n              style = { estilo.input }/>\r\n          </View>\r\n\r\n          <View style={estilo.opcoes}>\r\n            <View style={estilo.boxBotao}>\r\n              <Button title=\"Pular\" onPress={criarQuestao} color=\"#e53b62\"/>\r\n            </View>\r\n\r\n            <View style={estilo.boxBotao}>\r\n              <Button title=\"Responder\" onPress={responder} color=\"#a0df52\"/>\r\n            </View>\r\n          </View>\r\n\r\n        </View>\r\n\r\n        <View style={estilo.boxBotaoTabuada}>\r\n          <Button title=\"Ver tabuada\" onPress={abrirTelaTabuada} color=\"#1f4f66\"/>\r\n        </View>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\nexport default TelaInicio;"]},"metadata":{},"sourceType":"module"}